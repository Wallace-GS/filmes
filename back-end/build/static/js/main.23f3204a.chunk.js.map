{"version":3,"sources":["components/Movie.js","components/Notification.js","components/Forms.js","components/Menu.js","services/movies.js","services/login.js","services/register.js","App.js","index.js"],"names":["Movie","movies","sortBy","user","submissionsVisible","handleDelete","listMovies","sort","a","b","Date","date","map","movie","key","id","title","genre","username","toLocaleDateString","filter","type","onClick","className","icon","faTimesCircle","Table","responsive","striped","bordered","variant","Notification","notification","reset","setTimeout","Alert","onClose","dismissible","message","Forms","valueA","valueB","typeA","typeB","labelA","labelB","handleChangeA","handleChangeB","handleSubmit","Form","onSubmit","Group","Label","Control","name","toLowerCase","value","onChange","Button","onMouseDown","e","preventDefault","Menu","loginVisible","formVisible","registerVisible","handleLoginVisible","handleFormVisible","handleRegisterVisible","handleSubmissionsVisible","handleLogout","style","color","fontWeight","token","setToken","newToken","getAll","request","axios","get","response","data","createMovie","newObject","config","headers","Authorization","post","deleteMovie","movieId","delete","login","credentials","register","App","useState","setMovies","newMovie","setNewMovie","setSortBy","setLoginVisible","setRegisterVisible","setFormVisible","setSubmissionsVisible","setUsername","password","setPassword","setUser","show","setNotification","useEffect","then","loggedUser","window","localStorage","getItem","JSON","parse","handleUsernameChange","target","handlePasswordChange","handleLogin","setItem","stringify","handleRegister","handleNewMovieChange","handleAddMovie","handleDeleteMovie","removeItem","ReactDOM","render","document","getElementById"],"mappings":"kSAKaA,EAAQ,SAAC,GAMf,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,aAEIC,EAAa,GAgDjB,MA7Ce,WAAXJ,GACFD,EAAOM,MAAK,SAACC,EAAGC,GAAJ,OAAU,IAAIC,KAAKD,EAAEE,MAAQ,IAAID,KAAKF,EAAEG,SACpDL,EAAaL,EAAOW,KAAI,SAACC,GAAD,OACtB,wBAAIC,IAAKD,EAAME,IACb,4BAAKF,EAAMG,OACX,4BAAKH,EAAMI,OACX,4BAAKJ,EAAMV,KAAKe,UAChB,4BAAK,IAAIR,KAAKG,EAAMF,MAAMQ,2BAIV,SAAXjB,GAAqBC,IAE9BG,EADOL,EAAOmB,QAAO,SAACP,GAAD,OAAWA,EAAMV,KAAKe,WAAaf,EAAKe,YAC3CN,KAAI,SAACC,GAAD,OACpB,wBAAIC,IAAKD,EAAME,IACb,4BACE,4BACEM,KAAK,SACLC,QAAS,kBAAMjB,EAAaQ,IAC5BU,UAAU,QAEV,kBAAC,IAAD,CAAiBC,KAAMC,OAExBZ,EAAMG,OAET,4BAAKH,EAAMI,OACX,4BAAKJ,EAAMV,KAAKe,UAChB,4BAAK,IAAIR,KAAKG,EAAMF,MAAMQ,2BAmB9B,yBAAKI,UAAU,eACZnB,GAAsB,wBAAImB,UAAU,cAAd,kBACvB,kBAACG,EAAA,EAAD,CAAOC,WAAW,KAAKC,SAAO,EAACC,UAAQ,EAACC,QAAQ,QAC9C,+BACE,4BACE,qCACA,qCACA,wCACA,4CAIJ,+BAAQxB,M,QCtEHyB,EAAe,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MAE3C,OADAC,YAAW,kBAAMD,MAAS,KAExB,yBAAKV,UAAU,SACb,kBAACY,EAAA,EAAD,CAAOL,QAASE,EAAaX,KAAMe,QAASH,EAAOI,aAAW,GAC5D,2BAAIL,EAAaM,Y,gBCLZC,EAAQ,SAAC,GAAD,IACnBC,EADmB,EACnBA,OACAC,EAFmB,EAEnBA,OACAC,EAHmB,EAGnBA,MACAC,EAJmB,EAInBA,MACAC,EALmB,EAKnBA,OACAC,EANmB,EAMnBA,OACAC,EAPmB,EAOnBA,cACAC,EARmB,EAQnBA,cACAC,EATmB,EASnBA,aATmB,OAWnB,kBAACC,EAAA,EAAD,CAAM1B,UAAU,QAAQ2B,SAAUF,GAChC,kBAACC,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,KAAaR,GACb,kBAACK,EAAA,EAAKI,QAAN,CACEC,KAAMV,EAAOW,cACblC,KAAMqB,EACNc,MAAOhB,EACPiB,SAAUX,KAGd,kBAACG,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,KAAaP,GACb,kBAACI,EAAA,EAAKI,QAAN,CACEC,KAAMT,EAAOU,cACblC,KAAMsB,EACNa,MAAOf,EACPgB,SAAUV,KAGd,kBAACW,EAAA,EAAD,CACE5B,QAAQ,gBACRT,KAAK,SACLsC,YAAa,SAACC,GAAD,OAAOA,EAAEC,mBAHxB,YC9BSC,EAAO,SAAC,GAYd,IAXL3D,EAWI,EAXJA,KACA4D,EAUI,EAVJA,aACAC,EASI,EATJA,YACA5D,EAQI,EARJA,mBACA6D,EAOI,EAPJA,gBAEAC,EAKI,EALJA,mBACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,sBACAC,EAEI,EAFJA,yBACAC,EACI,EADJA,aAEA,OAAKnE,EAuCH,yBAAKY,GAAG,UACN,6BACE,0BAAMQ,UAAU,SAAhB,oBAEF,6BACIyC,IAAgB5D,GAChB,oCACE,wBAAIkB,QAAS6C,EAAmB5C,UAAU,aAA1C,aAGA,wBAAID,QAAS+C,EAA0B9C,UAAU,aAAjD,kBAaA,wBACEA,UAAU,YACVD,QAASgD,EACTC,MAAO,CAAEC,MAAO,QAHlB,WASHR,GACC,wBACEzC,UAAU,YACVD,QAAS6C,EACTI,MAAO,CAAEC,MAAO,MAAOC,WAAY,WAHrC,UAQDrE,GACC,wBACEmB,UAAU,YACVD,QAAS+C,EACTE,MAAO,CAAEC,MAAO,MAAOC,WAAY,WAHrC,YA/EJ,yBAAK1D,GAAG,UACN,0BAAMQ,UAAU,SAAhB,mBACA,6BACIwC,IAAiBE,GACjB,oCACE,wBAAI3C,QAAS4C,EAAoB3C,UAAU,aAA3C,SAGA,wBAAID,QAAS8C,EAAuB7C,UAAU,aAA9C,aAKHwC,GACC,wBACExC,UAAU,YACVD,QAAS4C,EACTK,MAAO,CAAEC,MAAO,MAAOC,WAAY,WAHrC,UAQDR,GACC,wBACE1C,UAAU,YACVD,QAAS8C,EACTG,MAAO,CAAEC,MAAO,MAAOC,WAAY,WAHrC,a,iBCtCRC,EAAQ,KAECC,EAAW,SAACC,GACvBF,EAAK,iBAAaE,IAGPC,EAAM,uCAAG,8BAAArE,EAAA,6DACdsE,EAAUC,IAAMC,IARR,eAOM,SAEGF,EAFH,cAEdG,EAFc,yBAGbA,EAASC,MAHI,2CAAH,qDAMNC,EAAW,uCAAG,WAAOC,GAAP,iBAAA5E,EAAA,6DACnB6E,EAAS,CACbC,QAAS,CAAEC,cAAeb,IAFH,SAKFK,IAAMS,KAlBf,cAkB6BJ,EAAWC,GAL7B,cAKnBJ,EALmB,yBAMlBA,EAASC,MANS,2CAAH,sDASXO,EAAW,uCAAG,WAAOC,GAAP,eAAAlF,EAAA,6DACnB6E,EAAS,CACbC,QAAS,CAAEC,cAAeb,IAFH,SAKnBK,IAAMY,OAAN,UA3BQ,cA2BR,YAA2BD,GAAWL,GALnB,2CAAH,sDCpBXO,EAAK,uCAAG,WAAOC,GAAP,eAAArF,EAAA,sEACIuE,IAAMS,KAHf,aAG6BK,GADxB,cACbZ,EADa,yBAEZA,EAASC,MAFG,2CAAH,sDCALY,EAAQ,uCAAG,WAAOD,GAAP,eAAArF,EAAA,sEACCuE,IAAMS,KAHf,aAG6BK,GADrB,cAChBZ,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDCiONa,EA3NH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACT/F,EADS,KACDgG,EADC,OAEgBD,mBAAS,CACvChF,MAAO,GACPC,MAAO,KAJO,mBAETiF,EAFS,KAECC,EAFD,OAMYH,mBAAS,UANrB,mBAMT9F,EANS,KAMDkG,EANC,OAOwBJ,oBAAS,GAPjC,mBAOTjC,EAPS,KAOKsC,EAPL,OAQ8BL,oBAAS,GARvC,mBAQT/B,EARS,KAQQqC,EARR,OASsBN,oBAAS,GAT/B,mBASThC,EATS,KASIuC,EATJ,OAUoCP,oBAAS,GAV7C,mBAUT5F,EAVS,KAUWoG,EAVX,OAWgBR,mBAAS,IAXzB,mBAWT9E,EAXS,KAWCuF,EAXD,OAYgBT,mBAAS,IAZzB,mBAYTU,EAZS,KAYCC,EAZD,OAaQX,mBAAS,MAbjB,oBAaT7F,GAbS,MAaHyG,GAbG,SAcwBZ,mBAAS,CAC/ChF,MAAO,GACPsB,QAAS,GACTuE,MAAM,IAjBQ,qBAcT7E,GAdS,MAcK8E,GAdL,MAoBhBC,qBAAU,WACRlC,IAASmC,MAAK,SAAC/G,GAAD,OAAYgG,EAAUhG,QACnC,IAEH8G,qBAAU,WACR,IAAME,EAAaC,OAAOC,aAAaC,QAAQ,oBAC/C,GAAIH,EAAY,CACd,IAAM9G,EAAOkH,KAAKC,MAAML,GACxBL,GAAQzG,GACRwE,EAASxE,EAAKuE,UAEf,IAEH,IAcM6C,GAAuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAAgBf,EAAYe,EAAOhE,QAC1DiE,GAAuB,SAAC,GAAD,IAAGD,EAAH,EAAGA,OAAH,OAAgBb,EAAYa,EAAOhE,QAC1DkE,GAAW,uCAAG,WAAO9D,GAAP,eAAApD,EAAA,6DAClBoD,EAAEC,iBADgB,kBAGG+B,EAAM,CAAE1E,WAAUwF,aAHrB,OAGVvG,EAHU,OAKhB+G,OAAOC,aAAaQ,QAAQ,mBAAoBN,KAAKO,UAAUzH,IAC/DwE,EAASxE,EAAKuE,OACd0B,EAAU,UACVQ,GAAQzG,GACR2G,IAAgB,iBAAO,CACrBxE,QAAQ,YAAD,OAAcpB,EAAd,KACP2F,MAAM,EACNxF,KAAM,cAERoF,EAAY,IACZE,EAAY,IACZN,GAAgB,GAhBA,kDAkBhBS,IAAgB,iBAAO,CACrBxE,QAAS,gCACTuE,MAAM,EACNxF,KAAM,aArBQ,0DAAH,sDA+BXwG,GAAc,uCAAG,WAAOjE,GAAP,eAAApD,EAAA,6DACrBoD,EAAEC,iBADmB,kBAGbiC,EAAS,CAAE5E,WAAUwF,aAHR,uBAIAd,EAAM,CAAE1E,WAAUwF,aAJlB,OAIbvG,EAJa,OAMnB+G,OAAOC,aAAaQ,QAAQ,mBAAoBN,KAAKO,UAAUzH,IAC/DwE,EAASxE,EAAKuE,OACdkC,GAAQzG,GACR2G,IAAgB,iBAAO,CACrBxE,QAAQ,qCAAD,OAAuCpB,EAAvC,KACP2F,MAAM,EACNxF,KAAM,cAERoF,EAAY,IACZE,EAAY,IACZL,GAAmB,GAhBA,kDAkBnBQ,IAAgB,iBAAO,CACrBxE,QAAQ,mEACRuE,MAAM,EACNxF,KAAM,aArBW,0DAAH,sDA0BdyG,GAAuB,SAAC,GAAgB,IAAdN,EAAa,EAAbA,OAC9BrB,EAAY,eAAKD,EAAN,eAAiBsB,EAAOlE,KAAOkE,EAAOhE,UAE7CuE,GAAc,uCAAG,WAAOnE,GAAP,eAAApD,EAAA,6DACrBoD,EAAEC,iBADmB,SAEfsB,EAAYe,GAFG,uBAGArB,IAHA,OAGf5E,EAHe,OAIrBgG,EAAUhG,GAEV6G,IAAgB,iBAAO,CACrB9F,MAAO,UACPsB,QAAQ,gBAAD,OAAkB4D,EAASlF,OAClC6F,MAAM,EACNxF,KAAM,cAER8E,EAAY,CACVnF,MAAO,GACPC,MAAO,KAdY,2CAAH,sDAiBd+G,GAAiB,uCAAG,WAAOnH,GAAP,eAAAL,EAAA,sEAClBiF,EAAY5E,EAAME,IADA,uBAEH8D,IAFG,OAElB5E,EAFkB,OAGxBgG,EAAUhG,GAEV6G,IAAgB,iBAAO,CACrB9F,MAAO,UACPsB,QAAQ,kBAAD,OAAoBzB,EAAMG,OACjC6F,MAAM,EACNxF,KAAM,aATgB,2CAAH,sDAavB,OACE,yBAAKE,UAAU,mBACb,kBAAC,EAAD,CACEpB,KAAMA,GACN4D,aAAcA,EACdE,gBAAiBA,EACjBD,YAAaA,EACb5D,mBAAoBA,EAEpB8D,mBAnHqB,kBAAMmC,GAAiBtC,IAoH5CK,sBAnHwB,kBAAMkC,GAAoBrC,IAoHlDE,kBAnHoB,kBAAMoC,GAAgBvC,IAoH1CK,yBAnH2B,WAC/BmC,GAAuBpG,GAEvBgG,EADwB,SAAXlG,EAAoB,SAAW,SAkHxCoE,aA9Ee,WACnB4C,OAAOC,aAAac,WAAW,oBAC/B7B,EAAU,UACVQ,GAAQ,SA6EL7C,GACC,oCACE,qCACA,kBAAC,EAAD,CACEvB,OAAQtB,EACRuB,OAAQiE,EACRhE,MAAM,OACNC,MAAM,WACNC,OAAO,WACPC,OAAO,WACPG,aAAc0E,GACd5E,cAAeyE,GACfxE,cAAe0E,MAIpBxD,GACC,oCACE,wCACA,2FACA,kBAAC,EAAD,CACEzB,OAAQtB,EACRuB,OAAQiE,EACRhE,MAAM,OACNC,MAAM,WACNC,OAAO,WACPC,OAAO,WACPG,aAAc6E,GACd/E,cAAeyE,GACfxE,cAAe0E,MAIpBzD,GACC,oCACE,yCACA,kBAAC,EAAD,CACExB,OAAQ0D,EAASlF,MACjByB,OAAQyD,EAASjF,MACjByB,MAAM,OACNC,MAAM,OACNC,OAAO,QACPC,OAAO,QACPG,aAAc+E,GACdjF,cAAegF,GACf/E,cAAe+E,MAKpB9F,GAAa6E,MACZ,kBAAC,EAAD,CAAc7E,aAAcA,GAAcC,MAjKpB,kBAC1B6E,GAAgB,CAAExE,QAAS,GAAIuE,MAAM,OAmKnC,kBAAC,EAAD,CACE5G,OAAQA,EACRC,OAAQA,EACRC,KAAMA,GACNE,aAAc2H,GACd5H,mBAAoBA,MC3N5B8H,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.23f3204a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Table from 'react-bootstrap/table';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const Movie = ({\r\n  movies,\r\n  sortBy,\r\n  user,\r\n  submissionsVisible,\r\n  handleDelete,\r\n}) => {\r\n  let listMovies = [];\r\n  let temp = [];\r\n\r\n  if (sortBy === 'recent') {\r\n    movies.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n    listMovies = movies.map((movie) => (\r\n      <tr key={movie.id}>\r\n        <td>{movie.title}</td>\r\n        <td>{movie.genre}</td>\r\n        <td>{movie.user.username}</td>\r\n        <td>{new Date(movie.date).toLocaleDateString()}</td>\r\n        {/* <td>{movie.likes}</td> */}\r\n      </tr>\r\n    ));\r\n  } else if (sortBy === 'user' && user) {\r\n    temp = movies.filter((movie) => movie.user.username === user.username);\r\n    listMovies = temp.map((movie) => (\r\n      <tr key={movie.id}>\r\n        <td>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => handleDelete(movie)}\r\n            className=\"icon\"\r\n          >\r\n            <FontAwesomeIcon icon={faTimesCircle} />\r\n          </button>\r\n          {movie.title}\r\n        </td>\r\n        <td>{movie.genre}</td>\r\n        <td>{movie.user.username}</td>\r\n        <td>{new Date(movie.date).toLocaleDateString()}</td>\r\n        {/* <td>{movie.likes}</td> */}\r\n      </tr>\r\n    ));\r\n  }\r\n  // else if (sortBy === 'likes') {\r\n  //   movies.sort((a, b) => b.likes - a.likes);\r\n  //   listMovies = movies.map((movie) => (\r\n  //     <tr key={movie.id}>\r\n  //       <td>{movie.title}</td>\r\n  //       <td>{movie.genre}</td>\r\n  //       <td>{movie.user.username}</td>\r\n  //       <td>{new Date(movie.date).toLocaleDateString()}</td>\r\n  //       {/* <td>{movie.likes}</td> */}\r\n  //     </tr>\r\n  //   ));\r\n  // }\r\n\r\n  return (\r\n    <div className=\"movie-table\">\r\n      {submissionsVisible && <h1 className=\"text-align\">My Submissions</h1>}\r\n      <Table responsive=\"sm\" striped bordered variant=\"dark\">\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Genre</th>\r\n            <th>Added By</th>\r\n            <th>Date Added</th>\r\n            {/* <th>Likes</th> */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>{listMovies}</tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nexport const Notification = ({ notification, reset }) => {\r\n  setTimeout(() => reset(), 3000);\r\n  return (\r\n    <div className=\"alert\">\r\n      <Alert variant={notification.type} onClose={reset} dismissible>\r\n        <p>{notification.message}</p>\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nexport const Forms = ({\r\n  valueA,\r\n  valueB,\r\n  typeA,\r\n  typeB,\r\n  labelA,\r\n  labelB,\r\n  handleChangeA,\r\n  handleChangeB,\r\n  handleSubmit,\r\n}) => (\r\n  <Form className=\"forms\" onSubmit={handleSubmit}>\r\n    <Form.Group>\r\n      <Form.Label>{labelA}</Form.Label>\r\n      <Form.Control\r\n        name={labelA.toLowerCase()}\r\n        type={typeA}\r\n        value={valueA}\r\n        onChange={handleChangeA}\r\n      />\r\n    </Form.Group>\r\n    <Form.Group>\r\n      <Form.Label>{labelB}</Form.Label>\r\n      <Form.Control\r\n        name={labelB.toLowerCase()}\r\n        type={typeB}\r\n        value={valueB}\r\n        onChange={handleChangeB}\r\n      />\r\n    </Form.Group>\r\n    <Button\r\n      variant=\"outline-light\"\r\n      type=\"submit\"\r\n      onMouseDown={(e) => e.preventDefault()}\r\n    >\r\n      Submit\r\n    </Button>\r\n  </Form>\r\n);\r\n","import React from 'react';\r\n// import { NavDropdown } from 'react-bootstrap';\r\n\r\nexport const Menu = ({\r\n  user,\r\n  loginVisible,\r\n  formVisible,\r\n  submissionsVisible,\r\n  registerVisible,\r\n  // handleSort,\r\n  handleLoginVisible,\r\n  handleFormVisible,\r\n  handleRegisterVisible,\r\n  handleSubmissionsVisible,\r\n  handleLogout,\r\n}) => {\r\n  if (!user) {\r\n    return (\r\n      <nav id=\"navbar\">\r\n        <span className=\"brand\">filmes | (demo)</span>\r\n        <ul>\r\n          {!loginVisible && !registerVisible && (\r\n            <>\r\n              <li onClick={handleLoginVisible} className=\"nav-links\">\r\n                Login\r\n              </li>\r\n              <li onClick={handleRegisterVisible} className=\"nav-links\">\r\n                Register\r\n              </li>\r\n            </>\r\n          )}\r\n          {loginVisible && (\r\n            <li\r\n              className=\"nav-links\"\r\n              onClick={handleLoginVisible}\r\n              style={{ color: 'red', fontWeight: 'normal' }}\r\n            >\r\n              Cancel\r\n            </li>\r\n          )}\r\n          {registerVisible && (\r\n            <li\r\n              className=\"nav-links\"\r\n              onClick={handleRegisterVisible}\r\n              style={{ color: 'red', fontWeight: 'normal' }}\r\n            >\r\n              Cancel\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav id=\"navbar\">\r\n      <div>\r\n        <span className=\"brand\">filmes | (demo)</span>\r\n      </div>\r\n      <ul>\r\n        {!formVisible && !submissionsVisible && (\r\n          <>\r\n            <li onClick={handleFormVisible} className=\"nav-links\">\r\n              Add Movie\r\n            </li>\r\n            <li onClick={handleSubmissionsVisible} className=\"nav-links\">\r\n              My Submissions\r\n            </li>\r\n            {/* <li>\r\n              <NavDropdown title=\"Sort By\" id=\"dropdown\">\r\n                <NavDropdown.Item onSelect={() => handleSort('likes')}>\r\n                  Likes\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item onSelect={() => handleSort('recent')}>\r\n                  Recent\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </li> */}\r\n            <li\r\n              className=\"nav-links\"\r\n              onClick={handleLogout}\r\n              style={{ color: 'red' }}\r\n            >\r\n              Logout\r\n            </li>\r\n          </>\r\n        )}\r\n        {formVisible && (\r\n          <li\r\n            className=\"nav-links\"\r\n            onClick={handleFormVisible}\r\n            style={{ color: 'red', fontWeight: 'normal' }}\r\n          >\r\n            Cancel\r\n          </li>\r\n        )}\r\n        {submissionsVisible && (\r\n          <li\r\n            className=\"nav-links\"\r\n            onClick={handleSubmissionsVisible}\r\n            style={{ color: 'red', fontWeight: 'normal' }}\r\n          >\r\n            Cancel\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/movies';\r\nlet token = null;\r\n\r\nexport const setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nexport const getAll = async () => {\r\n  const request = axios.get(baseUrl);\r\n  const response = await request;\r\n  return response.data;\r\n};\r\n\r\nexport const createMovie = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteMovie = async (movieId) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  await axios.delete(`${baseUrl}/${movieId}`, config);\r\n};\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/login';\r\n\r\nexport const login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/users';\r\n\r\nexport const register = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Movie } from './components/Movie';\r\nimport { Notification } from './components/Notification';\r\nimport { Forms } from './components/Forms';\r\nimport { Menu } from './components/Menu';\r\nimport { getAll, createMovie, setToken, deleteMovie } from './services/movies';\r\nimport { login } from './services/login';\r\nimport { register } from './services/register';\r\n\r\nconst App = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [newMovie, setNewMovie] = useState({\r\n    title: '',\r\n    genre: '',\r\n  });\r\n  const [sortBy, setSortBy] = useState('recent');\r\n  const [loginVisible, setLoginVisible] = useState(false);\r\n  const [registerVisible, setRegisterVisible] = useState(false);\r\n  const [formVisible, setFormVisible] = useState(false);\r\n  const [submissionsVisible, setSubmissionsVisible] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [user, setUser] = useState(null);\r\n  const [notification, setNotification] = useState({\r\n    title: '',\r\n    message: '',\r\n    show: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAll().then((movies) => setMovies(movies));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loggedUser = window.localStorage.getItem('loggedFilmesUser');\r\n    if (loggedUser) {\r\n      const user = JSON.parse(loggedUser);\r\n      setUser(user);\r\n      setToken(user.token);\r\n    }\r\n  }, []);\r\n\r\n  const handleLoginVisible = () => setLoginVisible(!loginVisible);\r\n  const handleRegisterVisible = () => setRegisterVisible(!registerVisible);\r\n  const handleFormVisible = () => setFormVisible(!formVisible);\r\n  const handleSubmissionsVisible = () => {\r\n    setSubmissionsVisible(!submissionsVisible);\r\n    const sort = sortBy === 'user' ? 'recent' : 'user';\r\n    setSortBy(sort);\r\n  };\r\n\r\n  // const handleSort = (sort) => setSortBy(sort);\r\n\r\n  const notificationHandler = () =>\r\n    setNotification({ message: '', show: false });\r\n\r\n  const handleUsernameChange = ({ target }) => setUsername(target.value);\r\n  const handlePasswordChange = ({ target }) => setPassword(target.value);\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const user = await login({ username, password });\r\n\r\n      window.localStorage.setItem('loggedFilmesUser', JSON.stringify(user));\r\n      setToken(user.token);\r\n      setSortBy('recent');\r\n      setUser(user);\r\n      setNotification(() => ({\r\n        message: `Welcome, ${username}.`,\r\n        show: true,\r\n        type: 'success',\r\n      }));\r\n      setUsername('');\r\n      setPassword('');\r\n      setLoginVisible(false);\r\n    } catch (e) {\r\n      setNotification(() => ({\r\n        message: 'Invalid username or password.',\r\n        show: true,\r\n        type: 'danger',\r\n      }));\r\n    }\r\n  };\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem('loggedFilmesUser');\r\n    setSortBy('recent');\r\n    setUser(null);\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await register({ username, password });\r\n      const user = await login({ username, password });\r\n\r\n      window.localStorage.setItem('loggedFilmesUser', JSON.stringify(user));\r\n      setToken(user.token);\r\n      setUser(user);\r\n      setNotification(() => ({\r\n        message: `Registration successful. Welcome, ${username}.`,\r\n        show: true,\r\n        type: 'success',\r\n      }));\r\n      setUsername('');\r\n      setPassword('');\r\n      setRegisterVisible(false);\r\n    } catch (e) {\r\n      setNotification(() => ({\r\n        message: `Error. Please try another username which meets the requirements.`,\r\n        show: true,\r\n        type: 'danger',\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleNewMovieChange = ({ target }) => {\r\n    setNewMovie({ ...newMovie, [target.name]: target.value });\r\n  };\r\n  const handleAddMovie = async (e) => {\r\n    e.preventDefault();\r\n    await createMovie(newMovie);\r\n    const movies = await getAll();\r\n    setMovies(movies);\r\n\r\n    setNotification(() => ({\r\n      title: 'Success',\r\n      message: `Added movie: ${newMovie.title}`,\r\n      show: true,\r\n      type: 'success',\r\n    }));\r\n    setNewMovie({\r\n      title: '',\r\n      genre: '',\r\n    });\r\n  };\r\n  const handleDeleteMovie = async (movie) => {\r\n    await deleteMovie(movie.id);\r\n    const movies = await getAll();\r\n    setMovies(movies);\r\n\r\n    setNotification(() => ({\r\n      title: 'Success',\r\n      message: `Deleted movie: ${movie.title}`,\r\n      show: true,\r\n      type: 'danger',\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-wrapper\">\r\n      <Menu\r\n        user={user}\r\n        loginVisible={loginVisible}\r\n        registerVisible={registerVisible}\r\n        formVisible={formVisible}\r\n        submissionsVisible={submissionsVisible}\r\n        // handleSort={handleSort}\r\n        handleLoginVisible={handleLoginVisible}\r\n        handleRegisterVisible={handleRegisterVisible}\r\n        handleFormVisible={handleFormVisible}\r\n        handleSubmissionsVisible={handleSubmissionsVisible}\r\n        handleLogout={handleLogout}\r\n      />\r\n      {loginVisible && (\r\n        <>\r\n          <h1>Login</h1>\r\n          <Forms\r\n            valueA={username}\r\n            valueB={password}\r\n            typeA=\"text\"\r\n            typeB=\"password\"\r\n            labelA=\"Username\"\r\n            labelB=\"Password\"\r\n            handleSubmit={handleLogin}\r\n            handleChangeA={handleUsernameChange}\r\n            handleChangeB={handlePasswordChange}\r\n          />\r\n        </>\r\n      )}\r\n      {registerVisible && (\r\n        <>\r\n          <h1>Register</h1>\r\n          <p>* Both username and password must be 4 characters or longer.</p>\r\n          <Forms\r\n            valueA={username}\r\n            valueB={password}\r\n            typeA=\"text\"\r\n            typeB=\"password\"\r\n            labelA=\"Username\"\r\n            labelB=\"Password\"\r\n            handleSubmit={handleRegister}\r\n            handleChangeA={handleUsernameChange}\r\n            handleChangeB={handlePasswordChange}\r\n          />\r\n        </>\r\n      )}\r\n      {formVisible && (\r\n        <>\r\n          <h1>Add Movie</h1>\r\n          <Forms\r\n            valueA={newMovie.title}\r\n            valueB={newMovie.genre}\r\n            typeA=\"text\"\r\n            typeB=\"text\"\r\n            labelA=\"Title\"\r\n            labelB=\"Genre\"\r\n            handleSubmit={handleAddMovie}\r\n            handleChangeA={handleNewMovieChange}\r\n            handleChangeB={handleNewMovieChange}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {notification.show && (\r\n        <Notification notification={notification} reset={notificationHandler} />\r\n      )}\r\n\r\n      <Movie\r\n        movies={movies}\r\n        sortBy={sortBy}\r\n        user={user}\r\n        handleDelete={handleDeleteMovie}\r\n        submissionsVisible={submissionsVisible}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}